<p>Which ordering we use can affect the efficiency of our algorithm hugely. For analyses like {{#definition "reaching_definitions"}}reaching definitions{{/definition}} we use {{#definition "reverse_postorder"}}reverse postorder{{/definition}} because the values of \(\text{In}(n)\) depend on that node's {{#definition "predecessor"}}predecessors{{/definition}} (or <strong>parents</strong>).</p>

<p>Let's repeat our analysis using {{#definition "postorder"}}postorder{{/definition}} traversal.</p>
